package monky;

public class M01 {
//	小明认为某些数字不吉利，付账时会尽可能少的多付一些钱，使得价格中不包含这些不吉利数字，并且不出现0.例如，不吉利数字为1，4，7，8，商品价格为1000，小明实际支付2222.实现程序，输入商品原来的价格price，不吉利数字集合unlucky_numbers，求小明付账时的价格lucky_price.
//	// C
//	int get_lucky_price(int price,int unlucky_numbers[],int unlucky_numbers_count){
//	     //   TODO
//	}
//	 
//	// C++
//	int get_lucky_price(int price,const vector<int> & unlucky_numbers){
//	     //TODO
//	}
//	 
//	// Java
//	int getLuckyPrice(int price,List<Integer> unlucky_numbers){
//	     //   TODO
//	}

}


//题目描述
//一个一维维数组中只有1和-1，实现程序，求和为0的最长子串长度，并在注释中给出时间和空间复杂度。
//
//// C
//int getLongestLength(int array[],int szie){
//     //   TODO
//}
// 
//// C++
//int getLongestLength(const vector<int> & array){
//     //   TODO
//}
// 
//// Java
//int getLongestLength(List<Integer> array){
//     //   TODO
//}

